"use strict";(self.webpackChunkwecasino_www=self.webpackChunkwecasino_www||[]).push([[405],{3579:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Introduction","title":"Introduction","description":"Data Content","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/01-Introduction.md","sourceDirName":".","slug":"/Introduction","permalink":"/en/Introduction","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"defaultSidebar","next":{"title":"Apply","permalink":"/en/Apply"}}');var o=t(3420),r=t(5404);const s={},i="System Overview",d={},c=[{value:"Data Content",id:"data-content",level:2},{value:"Interface Categories",id:"interface-categories",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"Data Flow",id:"data-flow",level:2},{value:"Important Notes",id:"important-notes",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"system-overview",children:"System Overview"})}),"\n",(0,o.jsx)(n.h2,{id:"data-content",children:"Data Content"}),"\n",(0,o.jsx)(n.p,{children:'This API provides game table data subscription on a per-table basis, with each table being subscribable separately. Each table provides two major categories of data: "Management Data" and "Game Data":'}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Management Data"})," includes table opening, closing, maintenance, cover photo updates, and other management-related operations."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Game Data"})," includes shift, shoe, and round data, as well as records of each action such as dealing cards and rolling dice."]}),"\n",(0,o.jsx)(n.h2,{id:"interface-categories",children:"Interface Categories"}),"\n",(0,o.jsx)(n.p,{children:'This API provides all data through two methods: "Active Push" and "Passive Query":'}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Active Push"}),": Subscribe to our AMQP interface, and event notifications are sent immediately when events occur."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Passive Query"}),": After events occur, data can be retrieved through gRPC/HTTP API."]}),"\n",(0,o.jsx)(n.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,o.jsx)(n.p,{children:"All data content is divided into the following four object types:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"GameProvide (Game Table)"}),": Management data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"ShiftRecord (Shift)"}),": Game shift information"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"ShoeRecord (Shoe)"}),": Shoe information"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"RoundRecord (Round)"}),": Round information"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"data-flow",children:"Data Flow"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-txt",children:"Game Table (GameProvide)\n    \u2193\nShift (ShiftRecord)\n    \u2193\nShoe (ShoeRecord) [Some games may not have this]\n    \u2193\nRound (RoundRecord)\n"})}),"\n",(0,o.jsx)(n.p,{children:"A shift typically contains multiple shoes, and one shoe can have multiple rounds. For games without shoes, there will only be shift and round data, with one shift containing multiple rounds."}),"\n",(0,o.jsx)(n.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"All data has timestamps for easy tracking and querying"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},5404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(6672);const o={},r=a.createContext(o);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);